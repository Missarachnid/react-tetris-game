{"version":3,"sources":["gameHelpers.js","img/main.jpg","components/styles/styledTetris.js","components/styles/styledAside.js","tetrominos.js","hooks/useStage.js","components/styles/styledStage.js","components/styles/styledCell.js","components/Cell.js","components/Stage.js","components/styles/styledDisplay.js","components/Display.js","components/styles/styledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useinterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","mainBG","StyledTetris","StyledAside","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","React","memo","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","console","log","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b60fefc1.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12;\nexport const STAGE_HEIGHT = 20;\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () =>\n    new Array(STAGE_WIDTH).fill([0, 'clear'])\n  );\n\n  export const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n    for (let y = 0; y < player.tetromino.length; y += 1) {\n      for (let x = 0; x < player.tetromino[y].length; x += 1) {\n        // 1. Check that we're on an actual Tetromino cell\n        if (player.tetromino[y][x] !== 0) {\n          if (\n            // 2. Check that our move is inside the game areas height (y)\n            // We shouldn't go through the bottom of the play area\n            !stage[y + player.pos.y + moveY] ||\n            // 3. Check that our move is inside the game areas width (x)\n            !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n            // 4. Check that the cell wer'e moving to isn't set to clear\n            stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n              'clear'\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n  };","export default __webpack_public_path__ + \"static/media/main.cde31350.jpg\";","import styled from 'styled-components';\n\nimport mainBG from '../../img/main.jpg';\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${mainBG}) #000;\n  background-size: cover;\n  overflow: hidden;\n    h1 {\n      color: white;\n      text-align: center;\n      font-size: 2em;\n      margin: 10px 0 10px 0;\n    }\n`;\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: start-right;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;","import styled from 'styled-components';\n\nexport const StyledAside = styled.div`\n  text-align: center;\n  margin-left: 40px;\n`;","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230',\n  },\n  J: {\n    shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n    color: '36, 95, 223',\n  },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36',\n  },\n  O: {\n    shape: [['O', 'O'], ['O', 'O']],\n    color: '223, 217, 36',\n  },\n  S: {\n    shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n    color: '48, 211, 56',\n  },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198',\n  },\n  Z: {\n    shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n    color: '227, 78, 78',\n  },\n};\n\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ';\n  const randTetromino =\n    tetrominos[Math.floor(Math.random() * tetrominos.length)];\n  return TETROMINOS[randTetromino];\n};","import { useState, useEffect } from 'react';\nimport { createStage } from '../gameHelpers';\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage());\n  const [rowsCleared, setRowsCleared] = useState(0);\n\n  useEffect(() => {\n    setRowsCleared(0);\n\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, [])\n\n    const updateStage = prevStage => {\n      // Clear the stage\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell)),\n      );\n\n      // draw the tetromino\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      // check for Collision\n      if(player.collided) {\n        resetPlayer();\n        return sweepRows(newStage);\n      }\n      return newStage;\n    };\n\n    setStage(prev => updateStage(prev));\n  }, [player, resetPlayer]);\n\n  return [stage, setStage, rowsCleared];\n};","import styled from 'styled-components';\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import styled from 'styled-components';\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`","import React from \"react\";\n\nimport { StyledCell } from './styles/styledCell';\nimport { TETROMINOS } from '../tetrominos';\n\nconst Cell = ({type}) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n);\nexport default React.memo(Cell);","import React from 'react';\n\n//css\nimport { StyledStage } from './styles/styledStage';\n\n//components\nimport Cell from \"./Cell\";\n\nconst Stage = ({stage}) => (\n  <StyledStage width={stage[0].length} height={stage.length}>\n    {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n  </StyledStage>\n);\nexport default Stage;","import styled from 'styled-components';\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center; \n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 2px solid #009799;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 5px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;","import React from 'react';\n\n//css\nimport { StyledDisplay } from './styles/styledDisplay';\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>\n    { text }\n  </StyledDisplay>\n);\nexport default Display;","import styled from 'styled-components';\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 5px;\n  border: 2px solid #009799;\n  color: white;\n  background: black;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`","import React from 'react';\n\n//css\nimport { StyledStartButton } from './styles/styledStartButton';\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback} >\n    Start Game\n  </StyledStartButton>\n);\nexport default StartButton;","import React, { useState } from 'react';\nimport { createStage, checkCollision } from '../gameHelpers';\n//css\nimport { StyledTetris, StyledTetrisWrapper } from './styles/styledTetris';\nimport { StyledAside } from './styles/styledAside';\n\n//custom hook\nimport { usePlayer } from '../hooks/usePlayer';\nimport { useStage } from '../hooks/useStage';\nimport { useInterval } from '../hooks/useinterval';\nimport { useGameStatus } from '../hooks/useGameStatus';\n\n//components\nimport Stage from \"./Stage\";\nimport Display from \"./Display\";\nimport StartButton from \"./StartButton\";\n\nconst Tetris = () => {\n  //console.log('re-render');\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(null);\n\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer();\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared);\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  }\n\n  const startGame = () => {\n    //console.log(\"test\")\n    // Reset everything\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setRows(0);\n    setLevel(0);\n  }\n\n  const drop = () => {\n    if(rows > (level + 1) * 10){\n      setLevel(prev => prev + 1);\n      //increase speed\n      setDropTime(1000 / (level + 1) + 200);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false })\n    } else {\n      // Game Over\n      if (player.pos.y < 1) {\n        console.log(\"GAME OVER!!!\");\n        setGameOver(true);\n        setDropTime(null);\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n    }\n  };\n\n  const keyUp = ({keyCode}) => {\n    if(!gameOver){\n      if(keyCode === 40){\n        setDropTime(1000 / (level + 1) + 200);\n      }\n    }\n  }\n\n  const dropPlayer = () => {\n    console.log(\"Interval off\");\n    setDropTime(null);\n    drop();\n  };\n\n  const move = ({keyCode}) => {\n    if(!gameOver) {\n      if(keyCode === 37){\n        movePlayer(-1);\n      } else if(keyCode === 39){\n        movePlayer(1);\n      } else if(keyCode === 40){\n        dropPlayer();\n      } else if (keyCode === 38){\n        playerRotate(stage, 1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    drop();\n  }, dropTime);\n\n  return (\n  <StyledTetrisWrapper \n  role=\"button\" \n  tabIndex=\"0\" \n  onKeyDown={e => move(e)} \n  onKeyUp={keyUp}>\n    <h1> React Tetris Game</h1>\n    <StyledTetris>\n      <Stage stage={stage}/>\n      <StyledAside>\n        {gameOver ? (\n          <Display \n          gameOver={gameOver} \n          text=\"Game Over\" />)\n          : (\n        <div>\n          <Display text={`Score: ${score}`} />\n          <Display text={`Rows: ${rows}`} />\n          <Display text={`Level: ${level}`} />\n        </div>\n        )}\n        <StartButton \n        callback={startGame} />\n      </StyledAside>\n    </StyledTetris>\n  </StyledTetrisWrapper>\n)};\nexport default Tetris;","import { useState, useCallback } from 'react';\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos';\n\nimport { STAGE_WIDTH, checkCollision } from '../gameHelpers';\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: {x: 0, y: 0},\n    tetromino: TETROMINOS[0].shape,\n    collided: false,\n  });\n\n  const rotate = (matrix, dir) => {\n    // Make the rows to become cols (transpose)\n    const rotatedTetro = matrix.map((_, index) =>\n      matrix.map(col => col[index]),\n    );\n    // Reverse each row to get a rotated matrix\n    if (dir > 0) return rotatedTetro.map(row => row.reverse());\n    return rotatedTetro.reverse();\n  };\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir);\n\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while(checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  };\n\n  const updatePlayerPos = ({x, y, collided}) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: {x: (prev.pos.x += x), y: (prev.pos.y += y)},\n      collided,\n\n    }))\n  }\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false,\n    });\n  }, []);\n  return [player, updatePlayerPos, resetPlayer, playerRotate ];\n};\n\n","import { useState, useEffect, useCallback } from 'react';\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n\n  const linePoints = [40, 100, 300, 1200];\n\n  const calcScore = useCallback(() => {\n    // We have score\n    if (rowsCleared > 0) {\n      // This is how original Tetris score is calculated\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n\n  return [score, setScore, rows, setRows, level, setLevel];\n};","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","import React from 'react';\nimport Tetris from './components/Tetris';\n\nconst App = (props) => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n);\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}